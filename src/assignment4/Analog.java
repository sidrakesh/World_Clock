/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package assignment4;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Polygon;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.geom.AffineTransform;
import java.util.Calendar;
import java.util.TimeZone;
import javax.swing.ImageIcon;
import javax.swing.Timer;

/**
 *
 * @author Sameer
 */
public class Analog extends javax.swing.JPanel {

    private int hours,minutes;
    public Analog(int h,int m) {
        initComponents();
        hours = h; minutes = m;
        Timer t = new Timer(10,new ActionListener(){
            @Override
            public void actionPerformed(ActionEvent evt){
               repaint();
            }
        });
        t.start();
    }
    @Override
    public void paintComponent(Graphics G)
    {
        super.paintComponent(G);
        Calendar c = Calendar.getInstance(TimeZone.getTimeZone("UTC"));
        c.add(Calendar.HOUR, hours);
        c.add(Calendar.MINUTE, minutes);
        int Hours = c.get(Calendar.HOUR);
        int Minutes = c.get(Calendar.MINUTE);
        int Seconds = c.get(Calendar.SECOND);
        int MilliSeconds = c.get(Calendar.MILLISECOND);
        
        Image img = new ImageIcon(getClass().getResource("/images.jpg")).getImage();
        Graphics2D g = (Graphics2D)G;
        Graphics2D h = (Graphics2D)G;
        Graphics2D i = (Graphics2D)G;
        
        g.drawImage(img,0, 0,this.getWidth(),this.getHeight(),this);
        
        int centerX,centerY;
        
        centerX = this.getWidth()/2;
        centerY = this.getHeight()/2;
        int xcoords[] = new int[4];
        xcoords[0] = centerX+centerX/60;
        xcoords[1] = centerX+centerX/60;
        xcoords[2] = centerX-centerX/60;
        xcoords[3] = centerX-centerX/60;
        
        int ycoords[] = new int[4];
        ycoords[0] = centerY+centerY/15;
        ycoords[1] = centerY/10;
        ycoords[2] = centerY/10;
        ycoords[3] = centerY+centerY/15;
        
        int xcoordm[] = new int[4];
        xcoordm[0] = centerX;
        xcoordm[1] = centerX+centerX/30;
        xcoordm[2] = centerX;
        xcoordm[3] = centerX-centerX/30;
        
        int ycoordm[] = new int[4];
        ycoordm[0] = centerY+centerY/15;
        ycoordm[1] = centerY;
        ycoordm[2] = centerY/10;
        ycoordm[3] = centerY;
        
        int xcoordh[] = new int[4];
        xcoordh[0] = centerX;
        xcoordh[1] = centerX+centerX/30;
        xcoordh[2] = centerX;
        xcoordh[3] = centerX-centerX/30;
        
        int ycoordh[] = new int[4];
        ycoordh[0] = centerY+centerY/15;
        ycoordh[1] = centerY;
        ycoordh[2] = centerY/3;
        ycoordh[3] = centerY;
        
        g.setColor(Color.red);
        AffineTransform afg = g.getTransform();
        g.rotate(Math.toRadians((Seconds-1)*6+MilliSeconds*0.006),centerX,centerY);
        g.fill(new Polygon(xcoords,ycoords,4));
        g.setTransform(afg);
        
        h.setColor(Color.blue);
        AffineTransform afh = h.getTransform();
        h.rotate(Math.toRadians(Minutes*6),centerX,centerY);
        h.fill(new Polygon(xcoordm,ycoordm,4));
        h.setTransform(afh);
        
        i.setColor(Color.green);
        AffineTransform afi = i.getTransform();
        i.rotate(Math.toRadians((Hours+(double)Minutes/60)*30),centerX,centerY);
        i.fill(new Polygon(xcoordh,ycoordh,4));
        i.setTransform(afi);
    }
    public void setHours(int Hours)
    {
        hours = Hours;
    }
    public void setMinutes(int Minutes)
    {
        minutes = Minutes;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 218, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 218, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
